@namespace oxy url('http://www.oxygenxml.com/extensions/author');
@namespace xml url('http://www.w3.org/XML/1998/namespace');
@namespace xi url('http://www.w3.org/2001/XInclude');
@namespace url('http://www.tei-c.org/ns/1.0');

   oxy|comment {
    display:none !important;
    content: "";
   }

   respStmt, xi|include, include, oxy|doctype, handNote height, scriptDesc, profileDesc, authority, provenance, msItem, teiHeader listPlace, teiHeader listPerson, editionStmt, publicationStmt date, publisher, availability, msIdentifier, textLang {
        display:none;
          visibility: -oxy-collapse-text ;
    }
    
        /*Authority Lists*/
        body listPlace place, body listPerson person, body listOrg org {
        display:block;
        margin-bottom: 3em;
        background-color:#E8E8E8;
        border:5px solid rgb(153, 153, 143);
        }
        
        body listPlace[type="places"]:after {
        content: 
              oxy_editor(
            type, button,
            actionID, "add_place");
           display:block;
    }
    
    body listPlace[type="estates"]:after {
        content: 
              oxy_editor(
            type, button,
            actionID, "add_estate");
           display:block;
    }
    
    body listOrg:after {
        content: 
              oxy_editor(
            type, button,
            actionID, "add_juridical_person");
           display:block;
    }
    body listPerson:after {
        content: 
              oxy_editor(
            type, button,
            actionID, "add_person");
           display:block;
    }
        
          body listPlace place geo {
          visibility: -oxy-collapse-text ;
    }
    
     body listPlace place:before, body listOrg org:before, body listPerson person:before {
         font-weight:bold;
        content: "Item name";
        display:block;
        visibility: -oxy-collapse-text ;
           padding-left:20px;
          }
           
          
    body listPlace place placeName, body listPlace place geogName:not([type="coord"]), body listOrg org orgName, body listPerson person persName {
        border:2px solid rgb(153, 153, 143);
        background-color: #fdfdfd;
        margin:10px 20px 15px 20px;
        display:block;
        -oxy-placeholder-content: 'Standardized name';     
    }
    
    body listPlace place placeName[type="other"], body listPlace place geogName[type="other"], body listOrg org orgName[type="other"], body listPerson person persName[type="other"] {
        border:2px solid rgb(153, 153, 143);
        background-color: #fdfdfd;
        margin:10px 20px 15px 20px;
        display:block;
        -oxy-placeholder-content: 'Also known as';
    }    

    
    body listPlace place geo:before {
        content: "Coordinates (Lat, Long): "
        oxy_htmlContent(
             content, "<span style='font:11px'>[<a href='https://www.latlong.net/'>Search</a>]</span>")
              /*oxy_htmlContent(
             href, "../resources/map.html",
            id, "p_prova",
            width, 400px)*/
        oxy_editor(
           type, text,
           edit, "#text"
           columns, 40);
           display:block;
           padding-left:20px;
    }
    
    body listPlace place idno:before, body listOrg org idno:before, body listPerson person idno:before {
        content: "Item number: "
        oxy_editor(
           type, text,
           edit, "#text"
           columns, 30);
           display:block;
           padding-left:20px;
    }    

         body listPlace place note, body listOrg org note, body listPerson person note {
        border:2px solid rgb(153, 153, 143);
        background-color: #fdfdfd;
        margin:10px 20px 15px 20px;
        display:block;
        -oxy-placeholder-content: 'Commentary/Bibliography';
    }
    
    
    /* Links from people, places, juridical persons, estates to PLACES*/
    body listPerson person link[type="places"] {
        content: "Linked to (place): "
        oxy_editor(
             type, popupSelection,
             edit, "@corresp",
             editable, false,
             sort, ascending,
             values, oxy_concat("#", oxy_xpath(oxy_concat('string-join(doc("', oxy_url('${framework}/', 'resources/places.xml'), '")//listPlace//place/idno, ",#")'))),
             labels, oxy_xpath(oxy_concat('string-join(doc("', oxy_url('${framework}/', 'resources/places.xml'), '")//listPlace//place/placeName[1], ",")' ))
             )
             " Link type: "
             oxy_editor(
           type, combo,
           edit, "@subtype"
           editable, true,
             columns, 25,
             values, "isPartOf, isMadeOf, isInVicinityOf, hasInItsVicinity, isAdjacentTo, hasConnectionWith");
           display:block;
           padding-left:20px;
    }
    
    body listPlace[type="estates"] place link[type="places"] {
        content: "Linked to (place): "
        oxy_editor(
             type, popupSelection,
             edit, "@corresp",
             editable, false,
             sort, ascending,
             values, oxy_concat("#", oxy_xpath(oxy_concat('string-join(doc("', oxy_url('${framework}/', 'resources/places.xml'), '")//listPlace//place/idno, ",#")'))),
             labels, oxy_xpath(oxy_concat('string-join(doc("', oxy_url('${framework}/', 'resources/places.xml'), '")//listPlace//place/placeName[1], ",")' ))
             )
             " Link type: "
             oxy_editor(
           type, combo,
           edit, "@subtype"
           editable, true,
             columns, 25,
             values, "isPartOf, isMadeOf, isInVicinityOf, hasInItsVicinity, isAdjacentTo, hasConnectionWith");
           display:block;
           padding-left:20px;
    }
    
    body listPlace[type="places"] place link[type="places"] {
        content: "Linked to (place): "
        oxy_editor(
             type, popupSelection,
             edit, "@corresp",
             editable, false,
             sort, ascending,
             values, oxy_concat("#", oxy_xpath(oxy_concat('string-join(//place/idno, ",#")'))),
             labels, oxy_xpath(oxy_concat('string-join(//place/placeName[1], ",")' ))
             )
             " Link type: "
             oxy_editor(
           type, combo,
           edit, "@subtype"
           editable, true,
             columns, 25,
             values, "isPartOf, isMadeOf, isInVicinityOf, hasInItsVicinity, isAdjacentTo, hasConnectionWith");
           display:block;
           padding-left:20px;
    }
    
    body listOrg org link[type="places"] {
        content: "Linked to (place): "
        oxy_editor(
             type, popupSelection,
             edit, "@corresp",
             editable, false,
             sort, ascending,
             values, oxy_concat("#", oxy_xpath(oxy_concat('string-join(doc("', oxy_url('${framework}/', 'resources/places.xml'), '")//listPlace//place/idno, ",#")'))),
             labels, oxy_xpath(oxy_concat('string-join(doc("', oxy_url('${framework}/', 'resources/places.xml'), '")//listPlace//place/placeName[1], ",")' ))
             )
             " Link type: "
             oxy_editor(
           type, combo,
           edit, "@subtype"
           editable, true,
             columns, 25,
             values, "isPartOf, isWithin, isAdjacentTo, hasConnectionWith");
           display:block;
           padding-left:20px;
    }
      
          /* Links from people, places, juridical persons, estates to PEOPLE*/
     body listPlace place link[type="people"], body listOrg org link[type="people"] {
        content: "Linked to (person): "
        oxy_editor(
             type, popupSelection,
             edit, "@corresp",
             editable, false,
             sort, ascending,
             values, oxy_concat("#", oxy_xpath(oxy_concat('string-join(doc("', oxy_url('${framework}/', 'resources/people.xml'), '")//listPerson//person/idno, ",#")'))),
             labels, oxy_xpath(oxy_concat('string-join(doc("', oxy_url('${framework}/', 'resources/people.xml'), '")//listPerson//person/persName, ",")' ))
             )
             " Link type: "
             oxy_editor(
           type, combo,
           edit, "@subtype"
           editable, true,
             columns, 25,
             values, "legallyRecognisedUnionWith, seriousIntimateRelationshipWith, casualIntimateRelationshipWith, intimateRelationshipWith, fatherOf, fatherInLawOf, motherOf, motherInLawOf, parentOf, fosterParentOf, sonOf, sonInLawOf, daughterOf, daughterInLawOf, childOf, grandfatherOf, grandmotherOf, grandparentOf, grandsonOf, granddaughterOf, grandchildOf, greatGrandfatherOf, greatGrandmotherOf, greatGrandparentOf, greatGrandsonOf, greatGranddaughterOf, brotherOf, brotherInLawOf, sisterOf, sisterInLawOf, siblingOf, auntOf, uncleOf, nephewOf, nieceOf, childOfSiblingOf, cousinOf, kinOf, ancestorOf, descendentOf, familyOf, extendedFamilyOf, hereditaryFamilyOf, householdOf, extendedHouseholdOf, patronOf, clientOf, masterOf, formerMasterOf, slaveOf, houseSlaveOf, formerSlaveOf, freedSlaveOf, freedmanOf, freedwomanOf, fellowFreedmanOf, godfatherOf, godmotherOf, godsonOf, goddaughterOf, compaterOf, commaterOf, nutritusOf, nutritorOf, benefactorOf, GratitudeTo, testamentaryLinkWith, legateeOf, heirTo, friendshipFor, allianceWith, enmityFor, dominusOf, seniorOf, vassusOf, gasindiusOf, fidelisOf, milesOf, homoOf, agentFor, professionalRelationship, link");
           display:block;
           padding-left:20px;
    }
    
    body listPerson person link[type="people"] {
        content: "Linked to (person): "
        oxy_editor(
             type, popupSelection,
             edit, "@corresp",
             editable, false,
             sort, ascending,
             values, oxy_concat("#", oxy_xpath(oxy_concat('string-join(//listPerson//person/idno, ",#")'))),
             labels, oxy_xpath(oxy_concat('string-join(//listPerson//person/persName, ",")' ))
             )
             " Link type: "
             oxy_editor(
           type, combo,
           edit, "@subtype"
           editable, true,
             columns, 25,
             values, "legallyRecognisedUnionWith, seriousIntimateRelationshipWith, casualIntimateRelationshipWith, intimateRelationshipWith, fatherOf, fatherInLawOf, motherOf, motherInLawOf, parentOf, fosterParentOf, sonOf, sonInLawOf, daughterOf, daughterInLawOf, childOf, grandfatherOf, grandmotherOf, grandparentOf, grandsonOf, granddaughterOf, grandchildOf, greatGrandfatherOf, greatGrandmotherOf, greatGrandparentOf, greatGrandsonOf, greatGranddaughterOf, brotherOf, brotherInLawOf, sisterOf, sisterInLawOf, siblingOf, auntOf, uncleOf, nephewOf, nieceOf, childOfSiblingOf, cousinOf, kinOf, ancestorOf, descendentOf, familyOf, extendedFamilyOf, hereditaryFamilyOf, householdOf, extendedHouseholdOf, patronOf, clientOf, masterOf, formerMasterOf, slaveOf, houseSlaveOf, formerSlaveOf, freedSlaveOf, freedmanOf, freedwomanOf, fellowFreedmanOf, godfatherOf, godmotherOf, godsonOf, goddaughterOf, compaterOf, commaterOf, nutritusOf, nutritorOf, benefactorOf, GratitudeTo, testamentaryLinkWith, legateeOf, heirTo, friendshipFor, allianceWith, enmityFor, dominusOf, seniorOf, vassusOf, gasindiusOf, fidelisOf, milesOf, homoOf, agentFor, professionalRelationship, link");
           display:block;
           padding-left:20px;
    }
    
        /* Links from people, places, juridical persons, estates to JURIDICAL PERSONS*/
    body listPlace place link[type="juridical_persons"], body listPerson person link[type="juridical_persons"] {
        content: "Linked to (juridical person): "
        oxy_editor(
             type, popupSelection,
             edit, "@corresp",
             editable, false,
             sort, ascending,
             values, oxy_concat("#", oxy_xpath(oxy_concat('string-join(doc("', oxy_url('${framework}/', 'resources/juridical_persons.xml'), '")//listOrg//org/idno, ",#")'))),
             labels, oxy_xpath(oxy_concat('string-join(doc("', oxy_url('${framework}/', 'resources/juridical_persons.xml'), '")//listOrg//org/orgName, ",")' ))
             )
             " Link type: "
             oxy_editor(
           type, combo,
           edit, "@subtype"
           editable, true,
             columns, 25,
             values, "legallyRecognisedUnionWith, seriousIntimateRelationshipWith, casualIntimateRelationshipWith, intimateRelationshipWith, fatherOf, fatherInLawOf, motherOf, motherInLawOf, parentOf, fosterParentOf, sonOf, sonInLawOf, daughterOf, daughterInLawOf, childOf, grandfatherOf, grandmotherOf, grandparentOf, grandsonOf, granddaughterOf, grandchildOf, greatGrandfatherOf, greatGrandmotherOf, greatGrandparentOf, greatGrandsonOf, greatGranddaughterOf, brotherOf, brotherInLawOf, sisterOf, sisterInLawOf, siblingOf, auntOf, uncleOf, nephewOf, nieceOf, childOfSiblingOf, cousinOf, kinOf, ancestorOf, descendentOf, familyOf, extendedFamilyOf, hereditaryFamilyOf, householdOf, extendedHouseholdOf, patronOf, clientOf, masterOf, formerMasterOf, slaveOf, houseSlaveOf, formerSlaveOf, freedSlaveOf, freedmanOf, freedwomanOf, fellowFreedmanOf, godfatherOf, godmotherOf, godsonOf, goddaughterOf, compaterOf, commaterOf, nutritusOf, nutritorOf, benefactorOf, GratitudeTo, testamentaryLinkWith, legateeOf, heirTo, friendshipFor, allianceWith, enmityFor, dominusOf, seniorOf, vassusOf, gasindiusOf, fidelisOf, milesOf, homoOf, agentFor, professionalRelationship, link");
           display:block;
           padding-left:20px;
    }
    
    body listOrg org link[type="juridical_persons"] {
        content: "Linked to (juridical person): "
        oxy_editor(
             type, popupSelection,
             edit, "@corresp",
             editable, false,
             sort, ascending,
             values, oxy_concat("#", oxy_xpath(oxy_concat('string-join(//listOrg//org/idno, ",#")'))),
             labels, oxy_xpath(oxy_concat('string-join(//listOrg//org/orgName, ",")' ))
             )
             " Link type: "
             oxy_editor(
           type, combo,
           edit, "@subtype"
           editable, true,
             columns, 25,
             values, "legallyRecognisedUnionWith, seriousIntimateRelationshipWith, casualIntimateRelationshipWith, intimateRelationshipWith, fatherOf, fatherInLawOf, motherOf, motherInLawOf, parentOf, fosterParentOf, sonOf, sonInLawOf, daughterOf, daughterInLawOf, childOf, grandfatherOf, grandmotherOf, grandparentOf, grandsonOf, granddaughterOf, grandchildOf, greatGrandfatherOf, greatGrandmotherOf, greatGrandparentOf, greatGrandsonOf, greatGranddaughterOf, brotherOf, brotherInLawOf, sisterOf, sisterInLawOf, siblingOf, auntOf, uncleOf, nephewOf, nieceOf, childOfSiblingOf, cousinOf, kinOf, ancestorOf, descendentOf, familyOf, extendedFamilyOf, hereditaryFamilyOf, householdOf, extendedHouseholdOf, patronOf, clientOf, masterOf, formerMasterOf, slaveOf, houseSlaveOf, formerSlaveOf, freedSlaveOf, freedmanOf, freedwomanOf, fellowFreedmanOf, godfatherOf, godmotherOf, godsonOf, goddaughterOf, compaterOf, commaterOf, nutritusOf, nutritorOf, benefactorOf, GratitudeTo, testamentaryLinkWith, legateeOf, heirTo, friendshipFor, allianceWith, enmityFor, dominusOf, seniorOf, vassusOf, gasindiusOf, fidelisOf, milesOf, homoOf, agentFor, professionalRelationship, link");
           display:block;
           padding-left:20px;
    }
    
        /* Links from people, places, juridical persons, estates to ESTATES*/
    body listPlace[type="places"] place link[type="estates"], body listOrg org link[type="estates"], body listPerson person link[type="estates"] {
        content: "Linked to (estate): "
        oxy_editor(
             type, popupSelection,
             edit, "@corresp",
             editable, false,
             sort, ascending,
             values, oxy_concat("#", oxy_xpath(oxy_concat('string-join(doc("', oxy_url('${framework}/', 'resources/estates.xml'), '")//listPlace//place/idno, ",#")'))),
             labels, oxy_xpath(oxy_concat('string-join(doc("', oxy_url('${framework}/', 'resources/estates.xml'), '")//listPlace//place/geogName, ",")' ))
             )
             " Link type: "
             oxy_editor(
           type, combo,
           edit, "@subtype"
           editable, true,
             columns, 25,
             values, "isPartOf, isMadeOf, isInVicinityOf, hasInItsVicinity, isAdjacentTo, hasConnectionWith");
           display:block;
           padding-left:20px;
    }
    
    body listPlace[type="estates"] place link[type="estates"] {
        content: "Linked to (estate): "
        oxy_editor(
             type, popupSelection,
             edit, "@corresp",
             editable, false,
             sort, ascending,
             values, oxy_concat("#", oxy_xpath(oxy_concat('string-join(//place/idno, ",#")'))),
             labels, oxy_xpath(oxy_concat('string-join(//place/geogName, ",")' ))
             )
             " Link type: "
             oxy_editor(
           type, combo,
           edit, "@subtype"
           editable, true,
             columns, 25,
             values, "isPartOf, isMadeOf, isInVicinityOf, hasInItsVicinity, isAdjacentTo, hasConnectionWith");
           display:block;
           padding-left:20px;
    }
    
    
    
    body listPlace place:after, body listOrg org:after, body listPerson person:after {
        content: 
              oxy_editor(
            type, button,
            actionID, "add_place_link")
              oxy_editor(
            type, button,
            actionID, "add_person_link")
              oxy_editor(
            type, button,
            actionID, "add_juridical_person_link")
              oxy_editor(
            type, button,
            actionID, "add_estate_link");
           display:block;
           padding-left:20px;
    }
    
    encodingDesc category catDesc {
           display:block;
    }
    
        encodingDesc category:before {
        content: "Category"
        oxy_editor(
           type, text,
           edit, "@n"
           columns, 30);
        font-weight:bold;
        display:block;
        visibility: -oxy-collapse-text ;
    }
    
/*End Authority Lists*/

   TEI {
    display:block;
    margin:2em;
    line-height:175%;
    width: 75%;
    margin-left: 50px;
    border:2px solid rgb(153, 153, 143);
    background-color:rgb(245, 243, 221);
    margin:10px 20px 15px 20px;
   }

   TEI:before {
        content: "Document number: " 
        oxy_editor(
           type, text,
           edit, "@xml:id"
           columns, 40);
        display:block;
   }
    
    foreign, div title, history title, note title, body listPlace title, body listPerson title, body listOrg title {
        display:inline;
        font-style: italic;
    }

    msContents, dimensions, listBibl,  div[type="commentary"],
    div[type="edition"], div[type="translation"], lb   {
        display:block;
    }
    
    titleStmt:before {
        font-weight:bold;
        content: "Document title";
        display:block;
        visibility: -oxy-collapse-text ;
    }
    
    titleStmt title {
        border:2px solid rgb(153, 153, 143);
        background-color: #fdfdfd;
        margin:10px 20px 15px 20px;
        display:block;
        -oxy-placeholder-content: 'Title here';
    }

     publicationStmt:before {
        visibility: -oxy-collapse-text;
    }

    idno[type=uri]:before { 
       content: "URI: "
        oxy_editor(
           type, text,
           edit, "#text"
           columns, 40);
           display:block;
    }

    region, institution, settlement, repository, idno {
        visibility: -oxy-collapse-text;
    }       
    
    summary rs[type=text_type] {
        content: "Document type: "
        oxy_editor(
           type, combo,
             edit, "#text",
             editable, true,
             columns, 25,
              values, "Archaeological sources, Parchment documents, -Diploma, --Imperial/royal diploma, --Marquis’/ducal/princely diploma, --Episcopal diploma, -Placitum/iudicatum, -Cartula, --Venditio, --Commutatio, --Libellus/precaria/emphyteusis, --Offersio/donatio, --Promissio, --Ordinatio, --Testamentum/iudicatum, --Morgengabe, -Breve, --List/inventory, --Judicial breve, --Transactional breve, -Catalogus, -Littera/mandatum, -Papal concession, Epigraphic documents, Papyrological documents, -Papal concession (papyrus), -Breve (papyrus), Literary sources, -Author, Juridical sources, -Lex, -Capitulum");
           display:block;
    }
    
        summary rs[type=record_source] {
        content: "Record source: "
        oxy_editor(
           type, combo,
           edit, "#text"
           editable, true,
             columns, 25,
             values, "Original document, Critical edition, Document summary, Scientific literature");
           display:block;
    }
    
    summary rs[type=document_tradition] {
        content: "Document tradition: "
        oxy_editor(
           type, combo,
           edit, "#text"
           editable, true,
             columns, 25,
             values, "Original, Copy, Compendium, Uncertain tradition");
           display:block;
    }
    
        summary rs[type=fiscal_property] {
        content: "Fiscal property: "
        oxy_editor(
           type, combo,
           edit, "#text"
           editable, true,
             columns, 25,
             values, "Yes, No, Uncertain");
           display:block;
    }
      
       origDate, summary {
            display:block;
            border:2px solid rgb(153, 153, 143);
            margin:10px 20px 15px 20px;
            }
            
          origDate:before {
          content: "Date (YYYY-MM-DD). "
             " When: "
             oxy_editor(
             type, text,
             edit, "@when"
             columns, 10)
             " Not Before: "
             oxy_editor(
             type, text,
             edit, "@notBefore"
             columns, 10)
             "  Not After: "
             oxy_editor(
             type, text,
             edit, "@notAfter",
             columns, 10);
             display:block;
       }

       note[type="displayed_date"] {
        border:2px solid rgb(153, 153, 143);
        margin:10px 20px 15px 20px;
        background-color: #fdfdfd;
        display:block;
        -oxy-placeholder-content: 'Date (to be displayed) here';
    }
    
    note[type="dating_elements"] {
        border:2px solid rgb(153, 153, 143);
        margin:10px 20px 15px 20px;
        background-color: #fdfdfd;
        display:block;
        -oxy-placeholder-content: 'Dating elements here';
    }
    
       note[type="topical_date"] {
        border:2px solid rgb(153, 153, 143);
        margin:10px 20px 15px 20px;
        background-color: #fdfdfd;
        display:block;
        -oxy-placeholder-content: 'Topical date here';
    }

       
    origPlace {
        border:2px solid rgb(153, 153, 143);
        margin:10px 20px 15px 20px;
        background-color: #fdfdfd;
        display:block;
        -oxy-placeholder-content: 'Provenance here';
    }
    
    
/*Markup inside the text*/

ab rs:before {
        content:  "KEY: " 
        oxy_editor(
             type, popupSelection,
             edit, "@key",
             editable, false,
             values, oxy_concat("#", oxy_xpath(oxy_concat('string-join(doc("', oxy_url('${framework}/', 'resources/thesaurus.xml'), '")//taxonomy[@xml:id="thesaurus"]//category/catDesc/@n, ",#")'))),
             labels, oxy_xpath(oxy_concat('string-join(doc("', oxy_url('${framework}/', 'resources/thesaurus.xml'), '")//taxonomy[@xml:id="thesaurus"]//category/catDesc, ",")' ))
             );
        display:inline;
    }
    
ab rs {
    border-style:dashed;
    border-color:black;
    border-width: thin;
}

ab placeName {
    background-color: #e6e6ff;
}
ab persName {
    background-color: #ffffcc;
}
ab orgName {
    background-color: #ffe6e6;
}
ab geogName {
    background-color: #ccffcc;
}
ab date {
    background-color: #ffccff;
}
    
ab placeName:before {
        content:  "KEY: " 
        oxy_editor(
             type, popupSelection,
             edit, "@key",
             editable, false,
             values, oxy_concat("#", oxy_xpath(oxy_concat('string-join(doc("', oxy_url('${framework}/', 'resources/thesaurus.xml'), '")//taxonomy[@xml:id="thesaurus"]//category/catDesc/@n, ",#")'))),
             labels, oxy_xpath(oxy_concat('string-join(doc("', oxy_url('${framework}/', 'resources/thesaurus.xml'), '")//taxonomy[@xml:id="thesaurus"]//category/catDesc, ",")' ))
             )
             " REF: " 
        oxy_editor(
             type, popupSelection,
             edit, "@ref",
             editable, false,
             sort, ascending,
             values, oxy_concat("#", oxy_xpath(oxy_concat('string-join(doc("', oxy_url('${framework}/', 'resources/places.xml'), '")//listPlace//place/idno, ",#")'))),
             labels, oxy_xpath(oxy_concat('string-join(doc("', oxy_url('${framework}/', 'resources/places.xml'), '")//listPlace//place/placeName[1], ",")' ))
             );
        display:inline;
    }
    
    ab persName:before {
        content:  "KEY: " 
        oxy_editor(
             type, popupSelection,
             edit, "@key",
             editable, false,
             values, oxy_concat("#", oxy_xpath(oxy_concat('string-join(doc("', oxy_url('${framework}/', 'resources/thesaurus.xml'), '")//taxonomy[@xml:id="thesaurus"]//category/catDesc/@n, ",#")'))),
             labels, oxy_xpath(oxy_concat('string-join(doc("', oxy_url('${framework}/', 'resources/thesaurus.xml'), '")//taxonomy[@xml:id="thesaurus"]//category/catDesc, ",")' ))
             )
             " REF: " 
        oxy_editor(
             type, popupSelection,
             edit, "@ref",
             editable, false,
             sort, ascending,
             values, oxy_concat("#", oxy_xpath(oxy_concat('string-join(doc("', oxy_url('${framework}/', 'resources/people.xml'), '")//listPerson//person/idno, ",#")'))),
             labels, oxy_xpath(oxy_concat('string-join(doc("', oxy_url('${framework}/', 'resources/people.xml'), '")//listPerson//person/persName, ",")' ))
             );
        display:inline;
    }
  
    ab geogName:before {
        content:  "KEY: " 
        oxy_editor(
             type, popupSelection,
             edit, "@key",
             editable, false,
             values, oxy_concat("#", oxy_xpath(oxy_concat('string-join(doc("', oxy_url('${framework}/', 'resources/thesaurus.xml'), '")//taxonomy[@xml:id="thesaurus"]//category/catDesc/@n, ",#")'))),
             labels, oxy_xpath(oxy_concat('string-join(doc("', oxy_url('${framework}/', 'resources/thesaurus.xml'), '")//taxonomy[@xml:id="thesaurus"]//category/catDesc, ",")' ))
             )
             " REF: " 
        oxy_editor(
             type, popupSelection,
             edit, "@ref",
             editable, false,
             sort, ascending,
             values, oxy_concat("#", oxy_xpath(oxy_concat('string-join(doc("', oxy_url('${framework}/', 'resources/estates.xml'), '")//listPlace//place/idno, ",#")'))),
             labels, oxy_xpath(oxy_concat('string-join(doc("', oxy_url('${framework}/', 'resources/estates.xml'), '")//listPlace//place/geogName, ",")' ))
             );
        display:inline;
    }  
    
    ab orgName:before {
        content:  "KEY: " 
        oxy_editor(
             type, popupSelection,
             edit, "@key",
             editable, false,
             values, oxy_concat("#", oxy_xpath(oxy_concat('string-join(doc("', oxy_url('${framework}/', 'resources/thesaurus.xml'), '")//taxonomy[@xml:id="thesaurus"]//category/catDesc/@n, ",#")'))),
             labels, oxy_xpath(oxy_concat('string-join(doc("', oxy_url('${framework}/', 'resources/thesaurus.xml'), '")//taxonomy[@xml:id="thesaurus"]//category/catDesc, ",")' ))
             )
             " REF: " 
        oxy_editor(
             type, popupSelection,
             edit, "@ref",
             editable, false,
             sort, ascending,
             values, oxy_concat("#", oxy_xpath(oxy_concat('string-join(doc("', oxy_url('${framework}/', 'resources/juridical_persons.xml'), '")//listOrg//org/idno, ",#")'))),
             labels, oxy_xpath(oxy_concat('string-join(doc("', oxy_url('${framework}/', 'resources/juridical_persons.xml'), '")//listOrg//org/orgName, ",")' ))
             );
        display:inline;
    }  
    
/*End of markup inside the text*/      



       /* **************** Revision  **************** */

      revisionDesc:before {
          content: "Changes";
          font-weight:bold;
      }

       revisionDesc:after {
       display:block;
       content:
        oxy_editor(
            type, button,
            actionID, "insert_revision");
        font-weight:bold;
        font-size: 120%;
      }

      change:before {
          content: "When: "
          oxy_editor(
          type, datePicker,
            columns, 16,
            edit, "@when",
            format, "yyyy-MM-dd"
          )
        "Who"
        oxy_editor(
             type, text,
             edit, "@who",
             columns, 20);
             display:block;
      }

      change {
          content: "Type of change: "
          oxy_editor(type, combo,
             edit, "#text",
             editable, true,
             columns, 25,
             values, "creation of record, changes, minor changes, major changes");
             border-style:solid;
          border-width:2px;
          border-color: rgb(153, 153, 143);
          visibility: -oxy-collapse-text ;
          display:block;
      }
      
 
      /* **************** Body and full text  **************** */
   
   div[type="edition"]:before {
        font-weight:bold;
        content: "Text";
        display:block;
        visibility: -oxy-collapse-text ;
    }

        div[subtype="editions"]:before {
        font-weight:bold;
        content: "Editions and document summaries";
        display:block;
        visibility: -oxy-collapse-text ;
    }
    
    div[subtype="additional"]:before {
        font-weight:bold;
        content: "Bibliography";
        display:block;
        visibility: -oxy-collapse-text ;
    }
    
    div[subtype="links"]:before {
        font-weight:bold;
        content: "Links";
        display:block;
        visibility: -oxy-collapse-text ;
    }
    
    div[type="commentary"]:before {
        font-weight:bold;
        content: "Commentary";
        display:block;
        visibility: -oxy-collapse-text ;
    }
    
        div[type="translation"]:before {
        font-weight:bold;
        content: "Translation";
        display:block;
        visibility: -oxy-collapse-text ;
    }

        div[type="apparatus"]:before {
        font-weight:bold;
        content: "Apparatus";
        display:block;
        visibility: -oxy-collapse-text ;
    }


    div[type="edition"] ab {
        border:2px solid rgb(153, 153, 143);
        background-color: #fdfdfd;
        margin:10px 20px 15px 20px;
        display:block;
        -oxy-placeholder-content: 'Text here';
    }

        div[subtype="editions"] p, div[subtype="additional"] p, div[subtype="links"] p {
        border:2px solid rgb(153, 153, 143);
        background-color: #fdfdfd;
        margin:10px 20px 15px 20px;
        display:block;
        -oxy-placeholder-content: 'Text here';
    }
    
    div[type="commentary"] p {
        border:2px solid rgb(153, 153, 143);
        background-color: #fdfdfd;
        margin:10px 20px 15px 20px;
        display:block;
        -oxy-placeholder-content: 'Text here';
    }
    
        div[type="translation"] p {
        border:2px solid rgb(153, 153, 143);
        background-color: #fdfdfd;
        margin:10px 20px 15px 20px;
        display:block;
        -oxy-placeholder-content: 'Text here';
    }

       div[type="apparatus"] p {
        border:2px solid rgb(153, 153, 143);
        background-color: #fdfdfd;
        margin:10px 20px 15px 20px;
        display:block;
        -oxy-placeholder-content: 'Text here';
    }
    
    
    /* **************** Not used elements **************** */

       /*provenance:before {
       content: "Subsequent Provenance Information\AType: "
       oxy_editor(
             type, combo,
             edit, "@type"
             columns, 25,
             editable, false,
             values, "found, observed, not-observed, transferred")
           "\ASubtype: "
           oxy_editor(
             type, combo,
             edit, "@type"
             columns, 25,
             editable, false,
             values, "--If 'found', discovered, rediscovered, first-recorded, --If 'observed', seen, recorded, reported, --If 'transferred', moved, sold, given, loaned, purchased, acquired, donated, ")
           oxy_editor(
             type, text,
             edit, "#text"
             columns, 25);
           display: block;
           visibility: -oxy-collapse-text;
       }
   
       provenance location placeName {
        border:1px solid rgb(153, 153, 143);
        margin:10px 20px 15px 20px;
        display:block;
        -oxy-placeholder-content: 'Provenance information here. Tag persons, places and dates.';
    }*/
    
    support p, support {
        visibility: -oxy-collapse-text;
        display: block;
    }

    support p {
        content: "Short summary of material and support: "
        oxy_editor(
            type, text,
            edit, "#text",
            columns, 50);
        visibility: -oxy-collapse-text;
    }
    
    layout:before {
        content: "Columns: "
          oxy_editor(
             type, text,
             edit, "@columns"
             columns, 5)
             "  Written Lines: "
             oxy_editor(
             type, text,
             edit, "@writtenLines",
             columns, 5);
    }

       origin p, layout p, condition p, handNote p {
           content: "More detail if necessary: "
           oxy_editor(
             type, text,
             edit, "#text"
             columns, 40);
             display:block;
             visibility: -oxy-collapse-text ;

       }

    /* ******************   Images   ******************* */

    facsimile:before {
        content: "Images";
        visibility: -oxy-collapse-text;
        font-size: 130%;
        font-weight: bold;
    }
    facsimile {
        border:2px solid rgb(153, 153, 143);
        background-color: #fdfdfd;
        font-size: 110%;
    }

    graphic:before {
        content: "Filename: "
        oxy_editor(
           type, text,
           edit, "@url"
           columns, 40);
           display: block;
        font-size: 90%;
    }

    surface desc:before {
        content: "Caption (optional): "
        oxy_editor(
           type, text,
           edit, "#text"
           columns, 40);
           display: block;
    }
    surface desc {
        display:block;

    }

    facsimile:after {
        content:
        oxy_editor(
            type, button,
            actionID, "insert_image");
    }

    /*  Text Boxes */

 lb {
 content: " \A ";
  visibility: -oxy-collapse-text ;
 }
